CONCEITOS CLEAN ARCHITECTURE

1. Um ponto importante da Clean Architecture é que ela foca em proteger o 
"coração" da aplicação.
2. A Clean Architecture é uma variação ou evolução da Arquitetura Hexagonal, porém as duas
envolvem o conceito de proteger o coração da aplicação.
3. Baixo acomplamento entre as camadas -> Para protegermos o coração da nossa aplicação temos 
que trabalhar com camadas. Camadas significam limites arquiteturais e a melhor forma de fazer 
a comunicação entre um limite arquitetural e outro é através de contratos(interfaces), para que
assim consigamos manter um baixo acomplamento entre as camadas. 
4. Orientada a casos de uso -> É a intenção de conseguir realizar alguma ação.

PONTOS IMPORTANTES SOBRE ARQUITETURA

1. Formato que o software terá.
2. Divisão de componentes.
3. Comunicação entre componentes.
4. Uma boa arquitetura vai facilitar o processo de desenvolvimento, deploy, operação 
e manutenção. 

O objetivo principal de uma boa arquitetura é dar suporte ao ciclo de vida do sistema.
Uma boa arquitetura torna o sistema fácil de entender, fácil de desenvolver, fácil de manter
e fácil de implantar. O objetivo final é minimizar o custo de vida útil do sistema e maximizar
a produtividade do programador.

LIMITES ARQUITETURAIS 

-> Tudo que não impacta diretamente nas regras de negócio deve estar em um 
limite arquitetural diferente da camada de regras de negócio. EX: Independente do 
Frontend e do Banco de Dados que será usado as regras de negócio não mudarão, logo
tanto a camada de Banco de Dados como de FrontEnd devem estar em limites arquiteturais
diferentes da camada das regras de negócio.

DTO 

1. O DTO ajuda a trafegar os dados entre os limites arquiteturais.
2. O DTO é um objeto anêmico, sem comportamento.
3. O DTO não possui regras de negócio.
Resumindo: O DTO não faz nada além de trafegar os dados entre os limites arquiteturais.

PRESENTERS

1. Os Presenters são objetos de transformação.
2. ￼


